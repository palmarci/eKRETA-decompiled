// Decompiled with JetBrains decompiler
// Type: Ekreta.Mobile.Core.Views.RatingPopupPage
// Assembly: Ekreta.Mobile.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5AA13053-CF9F-480D-A76A-8A5D6C4EE194
// Assembly location: C:\fakepath\\Desktop\Ekreta.Mobile.Core.dll

using Ekreta.Mobile.Core.Behaviors;
using Ekreta.Mobile.Core.Extensions;
using Ekreta.Mobile.Core.ViewModels;
using FFImageLoading.Forms;
using Rg.Plugins.Popup.Animations;
using Rg.Plugins.Popup.Animations.Base;
using Rg.Plugins.Popup.Converters.TypeConverters;
using Rg.Plugins.Popup.Enums;
using Rg.Plugins.Popup.Pages;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Reflection;
using System.Xml;
using Xamarin.Forms;
using Xamarin.Forms.Internals;
using Xamarin.Forms.Xaml;
using Xamarin.Forms.Xaml.Internals;

namespace Ekreta.Mobile.Core.Views
{
  [XamlCompilation]
  [XamlFilePath("Views/RatingPopupPage.xaml")]
  public class RatingPopupPage : PopupPage
  {
    private ViewModelBase ViewModel;
    [GeneratedCode("Xamarin.Forms.Build.Tasks.XamlG", "2.0.0.0")]
    private Button SaveButton;

    public RatingPopupPage()
    {
      base.\u002Ector();
      this.InitializeComponent();
      ((BindableObject) this).set_BindingContext((object) this.ViewModel);
    }

    [GeneratedCode("Xamarin.Forms.Build.Tasks.XamlG", "2.0.0.0")]
    private void InitializeComponent()
    {
      ResourceLoader.ResourceLoadingQuery resourceLoadingQuery = new ResourceLoader.ResourceLoadingQuery();
      resourceLoadingQuery.set_AssemblyName(typeof (RatingPopupPage).GetTypeInfo().Assembly.GetName());
      resourceLoadingQuery.set_ResourcePath("Views/RatingPopupPage.xaml");
      resourceLoadingQuery.set_Instance((object) this);
      if (ResourceLoader.CanProvideContentFor(resourceLoadingQuery))
        this.__InitComponentRuntime();
      else if (XamlLoader.get_XamlFileProvider() != null && XamlLoader.get_XamlFileProvider()(((object) this).GetType()) != null)
      {
        this.__InitComponentRuntime();
      }
      else
      {
        ScaleAnimation scaleAnimation = new ScaleAnimation();
        RatingPopupViewModel ratingPopupViewModel = new RatingPopupViewModel();
        ColumnDefinition columnDefinition1 = new ColumnDefinition();
        ColumnDefinition columnDefinition2 = new ColumnDefinition();
        StaticResourceExtension resourceExtension1 = new StaticResourceExtension();
        TranslateExtension translateExtension1 = new TranslateExtension();
        Label label1 = new Label();
        StaticResourceExtension resourceExtension2 = new StaticResourceExtension();
        BindingExtension bindingExtension1 = new BindingExtension();
        TapGestureRecognizer gestureRecognizer1 = new TapGestureRecognizer();
        CachedImage cachedImage = new CachedImage();
        Grid grid = new Grid();
        StaticResourceExtension resourceExtension3 = new StaticResourceExtension();
        TranslateExtension translateExtension2 = new TranslateExtension();
        Label label2 = new Label();
        StaticResourceExtension resourceExtension4 = new StaticResourceExtension();
        BindingExtension bindingExtension2 = new BindingExtension();
        ReferenceExtension referenceExtension1 = new ReferenceExtension();
        BindingExtension bindingExtension3 = new BindingExtension();
        EditorTextChangedCommandCanExecuteBehavior canExecuteBehavior1 = new EditorTextChangedCommandCanExecuteBehavior();
        Editor editor = new Editor();
        BindingExtension bindingExtension4 = new BindingExtension();
        ReferenceExtension referenceExtension2 = new ReferenceExtension();
        BindingExtension bindingExtension5 = new BindingExtension();
        CheckBoxChangedCommandCanExecuteBehavior canExecuteBehavior2 = new CheckBoxChangedCommandCanExecuteBehavior();
        CheckBox checkBox = new CheckBox();
        StaticResourceExtension resourceExtension5 = new StaticResourceExtension();
        TranslateExtension translateExtension3 = new TranslateExtension();
        BindingExtension bindingExtension6 = new BindingExtension();
        TapGestureRecognizer gestureRecognizer2 = new TapGestureRecognizer();
        Span span1 = new Span();
        TranslateExtension translateExtension4 = new TranslateExtension();
        BindingExtension bindingExtension7 = new BindingExtension();
        TapGestureRecognizer gestureRecognizer3 = new TapGestureRecognizer();
        Span span2 = new Span();
        TranslateExtension translateExtension5 = new TranslateExtension();
        BindingExtension bindingExtension8 = new BindingExtension();
        TapGestureRecognizer gestureRecognizer4 = new TapGestureRecognizer();
        Span span3 = new Span();
        FormattedString formattedString = new FormattedString();
        Label label3 = new Label();
        StackLayout stackLayout1 = new StackLayout();
        BindingExtension bindingExtension9 = new BindingExtension();
        StaticResourceExtension resourceExtension6 = new StaticResourceExtension();
        TranslateExtension translateExtension6 = new TranslateExtension();
        Button button = new Button();
        StackLayout stackLayout2 = new StackLayout();
        RatingPopupPage ratingPopupPage;
        NameScope nameScope = (NameScope) (NameScope.GetNameScope((BindableObject) (ratingPopupPage = this)) ?? (INameScope) new NameScope());
        NameScope.SetNameScope((BindableObject) ratingPopupPage, (INameScope) nameScope);
        ((INameScope) nameScope).RegisterName("SaveButton", (object) button);
        if (((Element) button).get_StyleId() == null)
          ((Element) button).set_StyleId("SaveButton");
        this.SaveButton = button;
        ((BindableObject) ratingPopupPage).SetValue((BindableProperty) BindableObject.BindingContextProperty, (object) "viewModels:RatingPopupViewModel");
        ((BaseAnimation) scaleAnimation).set_DurationIn((uint) new UintTypeConverter().ConvertFromInvariantString("400"));
        ((BaseAnimation) scaleAnimation).set_DurationOut((uint) new UintTypeConverter().ConvertFromInvariantString("300"));
        ((BaseAnimation) scaleAnimation).set_EasingIn((Easing) new EasingTypeConverter().ConvertFromInvariantString("SinOut"));
        ((BaseAnimation) scaleAnimation).set_EasingOut((Easing) new EasingTypeConverter().ConvertFromInvariantString("SinIn"));
        ((FadeAnimation) scaleAnimation).set_HasBackgroundAnimation(true);
        scaleAnimation.set_PositionIn((MoveAnimationOptions) 0);
        scaleAnimation.set_PositionOut((MoveAnimationOptions) 0);
        scaleAnimation.set_ScaleIn(1.2);
        scaleAnimation.set_ScaleOut(0.8);
        ((BindableObject) ratingPopupPage).SetValue((BindableProperty) PopupPage.AnimationProperty, (object) scaleAnimation);
        ((BindableObject) ratingPopupPage).SetValue((BindableProperty) BindableObject.BindingContextProperty, (object) ratingPopupViewModel);
        ((BindableObject) stackLayout2).SetValue((BindableProperty) Layout.PaddingProperty, (object) new Thickness(20.0, 20.0, 20.0, 20.0));
        ((BindableObject) stackLayout2).SetValue((BindableProperty) VisualElement.BackgroundColorProperty, (object) new Color(0.18823529779911, 0.658823549747467, 0.796078443527222, 1.0));
        ((BindableObject) stackLayout2).SetValue((BindableProperty) View.HorizontalOptionsProperty, (object) (LayoutOptions) LayoutOptions.Center);
        ((BindableObject) stackLayout2).SetValue((BindableProperty) View.VerticalOptionsProperty, (object) (LayoutOptions) LayoutOptions.Center);
        ((BindableObject) grid).SetValue((BindableProperty) VisualElement.MinimumHeightRequestProperty, (object) 45.0);
        ((BindableObject) columnDefinition1).SetValue((BindableProperty) ColumnDefinition.WidthProperty, new GridLengthTypeConverter().ConvertFromInvariantString("*"));
        ((DefinitionCollection<ColumnDefinition>) ((BindableObject) grid).GetValue((BindableProperty) Grid.ColumnDefinitionsProperty)).Add(columnDefinition1);
        ((BindableObject) columnDefinition2).SetValue((BindableProperty) ColumnDefinition.WidthProperty, new GridLengthTypeConverter().ConvertFromInvariantString("20"));
        ((DefinitionCollection<ColumnDefinition>) ((BindableObject) grid).GetValue((BindableProperty) Grid.ColumnDefinitionsProperty)).Add(columnDefinition2);
        ((BindableObject) label1).SetValue((BindableProperty) Grid.ColumnProperty, (object) 0);
        resourceExtension1.set_Key("PopupDescriptionStyle");
        StaticResourceExtension resourceExtension7 = resourceExtension1;
        XamlServiceProvider xamlServiceProvider1 = new XamlServiceProvider();
        Type type1 = typeof (IProvideValueTarget);
        object[] objArray1 = new object[0 + 4];
        objArray1[0] = (object) label1;
        objArray1[1] = (object) grid;
        objArray1[2] = (object) stackLayout2;
        objArray1[3] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider1;
        object obj1 = (object) (valueTargetProvider1 = new SimpleValueTargetProvider(objArray1, (object) VisualElement.StyleProperty, (INameScope) nameScope));
        xamlServiceProvider1.Add(type1, (object) valueTargetProvider1);
        xamlServiceProvider1.Add(typeof (IReferenceProvider), obj1);
        Type type2 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver1 = new XmlNamespaceResolver();
        namespaceResolver1.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver1.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver1.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver1.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver1.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver1.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver1.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver1.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver1.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver1.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver1 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver1, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider1.Add(type2, (object) xamlTypeResolver1);
        xamlServiceProvider1.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(46, 17)));
        object obj2 = ((IMarkupExtension) resourceExtension7).ProvideValue((IServiceProvider) xamlServiceProvider1);
        ((NavigableElement) label1).set_Style((Style) obj2);
        translateExtension1.Text = "Rating_PopupTitle";
        TranslateExtension translateExtension7 = translateExtension1;
        XamlServiceProvider xamlServiceProvider2 = new XamlServiceProvider();
        Type type3 = typeof (IProvideValueTarget);
        object[] objArray2 = new object[0 + 4];
        objArray2[0] = (object) label1;
        objArray2[1] = (object) grid;
        objArray2[2] = (object) stackLayout2;
        objArray2[3] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider2;
        object obj3 = (object) (valueTargetProvider2 = new SimpleValueTargetProvider(objArray2, (object) Label.TextProperty, (INameScope) nameScope));
        xamlServiceProvider2.Add(type3, (object) valueTargetProvider2);
        xamlServiceProvider2.Add(typeof (IReferenceProvider), obj3);
        Type type4 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver2 = new XmlNamespaceResolver();
        namespaceResolver2.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver2.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver2.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver2.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver2.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver2.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver2.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver2.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver2.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver2.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver2 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver2, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider2.Add(type4, (object) xamlTypeResolver2);
        xamlServiceProvider2.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(47, 17)));
        object obj4 = ((IMarkupExtension) translateExtension7).ProvideValue((IServiceProvider) xamlServiceProvider2);
        label1.set_Text((string) obj4);
        ((ICollection<View>) grid.get_Children()).Add((View) label1);
        ((BindableObject) cachedImage).SetValue((BindableProperty) Grid.ColumnProperty, (object) 1);
        ((BindableObject) cachedImage).SetValue((BindableProperty) CachedImage.DownsampleToViewSizeProperty, (object) true);
        ((BindableObject) cachedImage).SetValue((BindableProperty) CachedImage.SourceProperty, new ImageSourceConverter().ConvertFromInvariantString("TabBarItem_AbsencesUnjustified_Selected.png"));
        resourceExtension2.set_Key("TabHeaderImageStyleFfmpeg");
        StaticResourceExtension resourceExtension8 = resourceExtension2;
        XamlServiceProvider xamlServiceProvider3 = new XamlServiceProvider();
        Type type5 = typeof (IProvideValueTarget);
        object[] objArray3 = new object[0 + 4];
        objArray3[0] = (object) cachedImage;
        objArray3[1] = (object) grid;
        objArray3[2] = (object) stackLayout2;
        objArray3[3] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider3;
        object obj5 = (object) (valueTargetProvider3 = new SimpleValueTargetProvider(objArray3, (object) VisualElement.StyleProperty, (INameScope) nameScope));
        xamlServiceProvider3.Add(type5, (object) valueTargetProvider3);
        xamlServiceProvider3.Add(typeof (IReferenceProvider), obj5);
        Type type6 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver3 = new XmlNamespaceResolver();
        namespaceResolver3.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver3.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver3.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver3.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver3.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver3.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver3.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver3.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver3.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver3.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver3 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver3, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider3.Add(type6, (object) xamlTypeResolver3);
        xamlServiceProvider3.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(52, 17)));
        object obj6 = ((IMarkupExtension) resourceExtension8).ProvideValue((IServiceProvider) xamlServiceProvider3);
        ((NavigableElement) cachedImage).set_Style((Style) obj6);
        ((BindableObject) cachedImage).SetValue((BindableProperty) View.VerticalOptionsProperty, (object) (LayoutOptions) LayoutOptions.Start);
        bindingExtension1.set_Path("CloseClicked");
        BindingBase bindingBase1 = ((IMarkupExtension<BindingBase>) bindingExtension1).ProvideValue((IServiceProvider) null);
        ((BindableObject) gestureRecognizer1).SetBinding((BindableProperty) TapGestureRecognizer.CommandProperty, bindingBase1);
        ((ICollection<IGestureRecognizer>) ((View) cachedImage).get_GestureRecognizers()).Add((IGestureRecognizer) gestureRecognizer1);
        ((ICollection<View>) grid.get_Children()).Add((View) cachedImage);
        ((ICollection<View>) ((Layout<View>) stackLayout2).get_Children()).Add((View) grid);
        resourceExtension3.set_Key("PopupDataLabelStyle");
        StaticResourceExtension resourceExtension9 = resourceExtension3;
        XamlServiceProvider xamlServiceProvider4 = new XamlServiceProvider();
        Type type7 = typeof (IProvideValueTarget);
        object[] objArray4 = new object[0 + 3];
        objArray4[0] = (object) label2;
        objArray4[1] = (object) stackLayout2;
        objArray4[2] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider4;
        object obj7 = (object) (valueTargetProvider4 = new SimpleValueTargetProvider(objArray4, (object) VisualElement.StyleProperty, (INameScope) nameScope));
        xamlServiceProvider4.Add(type7, (object) valueTargetProvider4);
        xamlServiceProvider4.Add(typeof (IReferenceProvider), obj7);
        Type type8 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver4 = new XmlNamespaceResolver();
        namespaceResolver4.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver4.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver4.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver4.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver4.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver4.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver4.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver4.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver4.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver4.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver4 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver4, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider4.Add(type8, (object) xamlTypeResolver4);
        xamlServiceProvider4.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(59, 16)));
        object obj8 = ((IMarkupExtension) resourceExtension9).ProvideValue((IServiceProvider) xamlServiceProvider4);
        ((NavigableElement) label2).set_Style((Style) obj8);
        translateExtension2.Text = "Rating_PopupDescription";
        TranslateExtension translateExtension8 = translateExtension2;
        XamlServiceProvider xamlServiceProvider5 = new XamlServiceProvider();
        Type type9 = typeof (IProvideValueTarget);
        object[] objArray5 = new object[0 + 3];
        objArray5[0] = (object) label2;
        objArray5[1] = (object) stackLayout2;
        objArray5[2] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider5;
        object obj9 = (object) (valueTargetProvider5 = new SimpleValueTargetProvider(objArray5, (object) Label.TextProperty, (INameScope) nameScope));
        xamlServiceProvider5.Add(type9, (object) valueTargetProvider5);
        xamlServiceProvider5.Add(typeof (IReferenceProvider), obj9);
        Type type10 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver5 = new XmlNamespaceResolver();
        namespaceResolver5.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver5.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver5.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver5.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver5.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver5.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver5.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver5.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver5.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver5.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver5 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver5, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider5.Add(type10, (object) xamlTypeResolver5);
        xamlServiceProvider5.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(59, 61)));
        object obj10 = ((IMarkupExtension) translateExtension8).ProvideValue((IServiceProvider) xamlServiceProvider5);
        label2.set_Text((string) obj10);
        ((ICollection<View>) ((Layout<View>) stackLayout2).get_Children()).Add((View) label2);
        resourceExtension4.set_Key("FormDataEditorStyle");
        StaticResourceExtension resourceExtension10 = resourceExtension4;
        XamlServiceProvider xamlServiceProvider6 = new XamlServiceProvider();
        Type type11 = typeof (IProvideValueTarget);
        object[] objArray6 = new object[0 + 3];
        objArray6[0] = (object) editor;
        objArray6[1] = (object) stackLayout2;
        objArray6[2] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider6;
        object obj11 = (object) (valueTargetProvider6 = new SimpleValueTargetProvider(objArray6, (object) VisualElement.StyleProperty, (INameScope) nameScope));
        xamlServiceProvider6.Add(type11, (object) valueTargetProvider6);
        xamlServiceProvider6.Add(typeof (IReferenceProvider), obj11);
        Type type12 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver6 = new XmlNamespaceResolver();
        namespaceResolver6.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver6.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver6.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver6.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver6.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver6.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver6.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver6.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver6.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver6.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver6 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver6, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider6.Add(type12, (object) xamlTypeResolver6);
        xamlServiceProvider6.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(60, 17)));
        object obj12 = ((IMarkupExtension) resourceExtension10).ProvideValue((IServiceProvider) xamlServiceProvider6);
        ((NavigableElement) editor).set_Style((Style) obj12);
        bindingExtension2.set_Mode((BindingMode) 1);
        bindingExtension2.set_Path("Message");
        BindingBase bindingBase2 = ((IMarkupExtension<BindingBase>) bindingExtension2).ProvideValue((IServiceProvider) null);
        ((BindableObject) editor).SetBinding((BindableProperty) Editor.TextProperty, bindingBase2);
        referenceExtension1.set_Name("SaveButton");
        ReferenceExtension referenceExtension3 = referenceExtension1;
        XamlServiceProvider xamlServiceProvider7 = new XamlServiceProvider();
        Type type13 = typeof (IProvideValueTarget);
        object[] objArray7 = new object[0 + 5];
        objArray7[0] = (object) bindingExtension3;
        objArray7[1] = (object) canExecuteBehavior1;
        objArray7[2] = (object) editor;
        objArray7[3] = (object) stackLayout2;
        objArray7[4] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider7;
        object obj13 = (object) (valueTargetProvider7 = new SimpleValueTargetProvider(objArray7, (object) typeof (BindingExtension).GetRuntimeProperty("Source"), (INameScope) nameScope));
        xamlServiceProvider7.Add(type13, (object) valueTargetProvider7);
        xamlServiceProvider7.Add(typeof (IReferenceProvider), obj13);
        Type type14 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver7 = new XmlNamespaceResolver();
        namespaceResolver7.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver7.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver7.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver7.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver7.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver7.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver7.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver7.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver7.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver7.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver7 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver7, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider7.Add(type14, (object) xamlTypeResolver7);
        xamlServiceProvider7.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(62, 71)));
        object obj14 = ((IMarkupExtension) referenceExtension3).ProvideValue((IServiceProvider) xamlServiceProvider7);
        bindingExtension3.set_Source(obj14);
        bindingExtension3.set_Path("Command");
        BindingBase bindingBase3 = ((IMarkupExtension<BindingBase>) bindingExtension3).ProvideValue((IServiceProvider) null);
        ((BindableObject) canExecuteBehavior1).SetBinding(EditorTextChangedCommandCanExecuteBehavior.CommandProperty, bindingBase3);
        ((ICollection<Behavior>) ((BindableObject) editor).GetValue((BindableProperty) VisualElement.BehaviorsProperty)).Add((Behavior) canExecuteBehavior1);
        ((ICollection<View>) ((Layout<View>) stackLayout2).get_Children()).Add((View) editor);
        ((BindableObject) stackLayout1).SetValue((BindableProperty) StackLayout.OrientationProperty, (object) (StackOrientation) 1);
        ((BindableObject) stackLayout1).SetValue((BindableProperty) View.VerticalOptionsProperty, (object) (LayoutOptions) LayoutOptions.Center);
        ((BindableObject) checkBox).SetValue((BindableProperty) View.MarginProperty, (object) new Thickness(0.0));
        bindingExtension4.set_Path("SensitiveData");
        BindingBase bindingBase4 = ((IMarkupExtension<BindingBase>) bindingExtension4).ProvideValue((IServiceProvider) null);
        ((BindableObject) checkBox).SetBinding((BindableProperty) CheckBox.IsCheckedProperty, bindingBase4);
        ((BindableObject) checkBox).SetValue((BindableProperty) CheckBox.ColorProperty, (object) (Color) Color.White);
        referenceExtension2.set_Name("SaveButton");
        ReferenceExtension referenceExtension4 = referenceExtension2;
        XamlServiceProvider xamlServiceProvider8 = new XamlServiceProvider();
        Type type15 = typeof (IProvideValueTarget);
        object[] objArray8 = new object[0 + 6];
        objArray8[0] = (object) bindingExtension5;
        objArray8[1] = (object) canExecuteBehavior2;
        objArray8[2] = (object) checkBox;
        objArray8[3] = (object) stackLayout1;
        objArray8[4] = (object) stackLayout2;
        objArray8[5] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider8;
        object obj15 = (object) (valueTargetProvider8 = new SimpleValueTargetProvider(objArray8, (object) typeof (BindingExtension).GetRuntimeProperty("Source"), (INameScope) nameScope));
        xamlServiceProvider8.Add(type15, (object) valueTargetProvider8);
        xamlServiceProvider8.Add(typeof (IReferenceProvider), obj15);
        Type type16 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver8 = new XmlNamespaceResolver();
        namespaceResolver8.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver8.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver8.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver8.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver8.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver8.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver8.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver8.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver8.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver8.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver8 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver8, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider8.Add(type16, (object) xamlTypeResolver8);
        xamlServiceProvider8.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(71, 73)));
        object obj16 = ((IMarkupExtension) referenceExtension4).ProvideValue((IServiceProvider) xamlServiceProvider8);
        bindingExtension5.set_Source(obj16);
        bindingExtension5.set_Path("Command");
        BindingBase bindingBase5 = ((IMarkupExtension<BindingBase>) bindingExtension5).ProvideValue((IServiceProvider) null);
        ((BindableObject) canExecuteBehavior2).SetBinding(CheckBoxChangedCommandCanExecuteBehavior.CommandProperty, bindingBase5);
        ((ICollection<Behavior>) ((BindableObject) checkBox).GetValue((BindableProperty) VisualElement.BehaviorsProperty)).Add((Behavior) canExecuteBehavior2);
        ((ICollection<View>) ((Layout<View>) stackLayout1).get_Children()).Add((View) checkBox);
        resourceExtension5.set_Key("PopupDataCheckBoxLabelStyle");
        StaticResourceExtension resourceExtension11 = resourceExtension5;
        XamlServiceProvider xamlServiceProvider9 = new XamlServiceProvider();
        Type type17 = typeof (IProvideValueTarget);
        object[] objArray9 = new object[0 + 4];
        objArray9[0] = (object) label3;
        objArray9[1] = (object) stackLayout1;
        objArray9[2] = (object) stackLayout2;
        objArray9[3] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider9;
        object obj17 = (object) (valueTargetProvider9 = new SimpleValueTargetProvider(objArray9, (object) VisualElement.StyleProperty, (INameScope) nameScope));
        xamlServiceProvider9.Add(type17, (object) valueTargetProvider9);
        xamlServiceProvider9.Add(typeof (IReferenceProvider), obj17);
        Type type18 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver9 = new XmlNamespaceResolver();
        namespaceResolver9.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver9.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver9.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver9.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver9.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver9.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver9.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver9.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver9.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver9.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver9 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver9, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider9.Add(type18, (object) xamlTypeResolver9);
        xamlServiceProvider9.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(75, 17)));
        object obj18 = ((IMarkupExtension) resourceExtension11).ProvideValue((IServiceProvider) xamlServiceProvider9);
        ((NavigableElement) label3).set_Style((Style) obj18);
        ((BindableObject) label3).SetValue((BindableProperty) View.VerticalOptionsProperty, (object) (LayoutOptions) LayoutOptions.Center);
        ((BindableObject) label3).SetValue((BindableProperty) Label.VerticalTextAlignmentProperty, new TextAlignmentConverter().ConvertFromInvariantString("Center"));
        translateExtension3.Text = "Rating_PopupAcceptPrivacyPolicyFirstPart";
        TranslateExtension translateExtension9 = translateExtension3;
        XamlServiceProvider xamlServiceProvider10 = new XamlServiceProvider();
        Type type19 = typeof (IProvideValueTarget);
        object[] objArray10 = new object[0 + 6];
        objArray10[0] = (object) span1;
        objArray10[1] = (object) formattedString;
        objArray10[2] = (object) label3;
        objArray10[3] = (object) stackLayout1;
        objArray10[4] = (object) stackLayout2;
        objArray10[5] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider10;
        object obj19 = (object) (valueTargetProvider10 = new SimpleValueTargetProvider(objArray10, (object) Span.TextProperty, (INameScope) nameScope));
        xamlServiceProvider10.Add(type19, (object) valueTargetProvider10);
        xamlServiceProvider10.Add(typeof (IReferenceProvider), obj19);
        Type type20 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver10 = new XmlNamespaceResolver();
        namespaceResolver10.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver10.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver10.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver10.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver10.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver10.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver10.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver10.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver10.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver10.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver10 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver10, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider10.Add(type20, (object) xamlTypeResolver10);
        xamlServiceProvider10.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(80, 31)));
        object obj20 = ((IMarkupExtension) translateExtension9).ProvideValue((IServiceProvider) xamlServiceProvider10);
        span1.set_Text((string) obj20);
        bindingExtension6.set_Path("SensitiveDataTap");
        BindingBase bindingBase6 = ((IMarkupExtension<BindingBase>) bindingExtension6).ProvideValue((IServiceProvider) null);
        ((BindableObject) gestureRecognizer2).SetBinding((BindableProperty) TapGestureRecognizer.CommandProperty, bindingBase6);
        ((ICollection<IGestureRecognizer>) ((GestureElement) span1).get_GestureRecognizers()).Add((IGestureRecognizer) gestureRecognizer2);
        ((ICollection<Span>) formattedString.get_Spans()).Add(span1);
        ((BindableObject) span2).SetValue((BindableProperty) Span.FontAttributesProperty, new FontAttributesConverter().ConvertFromInvariantString("Bold"));
        translateExtension4.Text = "Rating_PopupAcceptPrivacyPolicySecondPart";
        TranslateExtension translateExtension10 = translateExtension4;
        XamlServiceProvider xamlServiceProvider11 = new XamlServiceProvider();
        Type type21 = typeof (IProvideValueTarget);
        object[] objArray11 = new object[0 + 6];
        objArray11[0] = (object) span2;
        objArray11[1] = (object) formattedString;
        objArray11[2] = (object) label3;
        objArray11[3] = (object) stackLayout1;
        objArray11[4] = (object) stackLayout2;
        objArray11[5] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider11;
        object obj21 = (object) (valueTargetProvider11 = new SimpleValueTargetProvider(objArray11, (object) Span.TextProperty, (INameScope) nameScope));
        xamlServiceProvider11.Add(type21, (object) valueTargetProvider11);
        xamlServiceProvider11.Add(typeof (IReferenceProvider), obj21);
        Type type22 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver11 = new XmlNamespaceResolver();
        namespaceResolver11.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver11.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver11.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver11.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver11.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver11.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver11.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver11.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver11.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver11.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver11 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver11, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider11.Add(type22, (object) xamlTypeResolver11);
        xamlServiceProvider11.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(87, 29)));
        object obj22 = ((IMarkupExtension) translateExtension10).ProvideValue((IServiceProvider) xamlServiceProvider11);
        span2.set_Text((string) obj22);
        ((BindableObject) span2).SetValue((BindableProperty) Span.TextDecorationsProperty, new TextDecorationConverter().ConvertFromInvariantString("Underline"));
        bindingExtension7.set_Path("OpenGDPRCommand");
        BindingBase bindingBase7 = ((IMarkupExtension<BindingBase>) bindingExtension7).ProvideValue((IServiceProvider) null);
        ((BindableObject) gestureRecognizer3).SetBinding((BindableProperty) TapGestureRecognizer.CommandProperty, bindingBase7);
        ((ICollection<IGestureRecognizer>) ((GestureElement) span2).get_GestureRecognizers()).Add((IGestureRecognizer) gestureRecognizer3);
        ((ICollection<Span>) formattedString.get_Spans()).Add(span2);
        translateExtension5.Text = "Rating_PopupAcceptPrivacyPolicyThirdPart";
        TranslateExtension translateExtension11 = translateExtension5;
        XamlServiceProvider xamlServiceProvider12 = new XamlServiceProvider();
        Type type23 = typeof (IProvideValueTarget);
        object[] objArray12 = new object[0 + 6];
        objArray12[0] = (object) span3;
        objArray12[1] = (object) formattedString;
        objArray12[2] = (object) label3;
        objArray12[3] = (object) stackLayout1;
        objArray12[4] = (object) stackLayout2;
        objArray12[5] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider12;
        object obj23 = (object) (valueTargetProvider12 = new SimpleValueTargetProvider(objArray12, (object) Span.TextProperty, (INameScope) nameScope));
        xamlServiceProvider12.Add(type23, (object) valueTargetProvider12);
        xamlServiceProvider12.Add(typeof (IReferenceProvider), obj23);
        Type type24 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver12 = new XmlNamespaceResolver();
        namespaceResolver12.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver12.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver12.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver12.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver12.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver12.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver12.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver12.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver12.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver12.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver12 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver12, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider12.Add(type24, (object) xamlTypeResolver12);
        xamlServiceProvider12.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(93, 31)));
        object obj24 = ((IMarkupExtension) translateExtension11).ProvideValue((IServiceProvider) xamlServiceProvider12);
        span3.set_Text((string) obj24);
        bindingExtension8.set_Path("SensitiveDataTap");
        BindingBase bindingBase8 = ((IMarkupExtension<BindingBase>) bindingExtension8).ProvideValue((IServiceProvider) null);
        ((BindableObject) gestureRecognizer4).SetBinding((BindableProperty) TapGestureRecognizer.CommandProperty, bindingBase8);
        ((ICollection<IGestureRecognizer>) ((GestureElement) span3).get_GestureRecognizers()).Add((IGestureRecognizer) gestureRecognizer4);
        ((ICollection<Span>) formattedString.get_Spans()).Add(span3);
        ((BindableObject) label3).SetValue((BindableProperty) Label.FormattedTextProperty, (object) formattedString);
        ((ICollection<View>) ((Layout<View>) stackLayout1).get_Children()).Add((View) label3);
        ((ICollection<View>) ((Layout<View>) stackLayout2).get_Children()).Add((View) stackLayout1);
        bindingExtension9.set_Path("OnSaveClicked");
        BindingBase bindingBase9 = ((IMarkupExtension<BindingBase>) bindingExtension9).ProvideValue((IServiceProvider) null);
        ((BindableObject) button).SetBinding((BindableProperty) Button.CommandProperty, bindingBase9);
        ((BindableObject) button).SetValue((BindableProperty) View.HorizontalOptionsProperty, (object) (LayoutOptions) LayoutOptions.Center);
        resourceExtension6.set_Key("RatingButtonStyle");
        StaticResourceExtension resourceExtension12 = resourceExtension6;
        XamlServiceProvider xamlServiceProvider13 = new XamlServiceProvider();
        Type type25 = typeof (IProvideValueTarget);
        object[] objArray13 = new object[0 + 3];
        objArray13[0] = (object) button;
        objArray13[1] = (object) stackLayout2;
        objArray13[2] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider13;
        object obj25 = (object) (valueTargetProvider13 = new SimpleValueTargetProvider(objArray13, (object) VisualElement.StyleProperty, (INameScope) nameScope));
        xamlServiceProvider13.Add(type25, (object) valueTargetProvider13);
        xamlServiceProvider13.Add(typeof (IReferenceProvider), obj25);
        Type type26 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver13 = new XmlNamespaceResolver();
        namespaceResolver13.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver13.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver13.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver13.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver13.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver13.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver13.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver13.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver13.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver13.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver13 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver13, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider13.Add(type26, (object) xamlTypeResolver13);
        xamlServiceProvider13.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(106, 13)));
        object obj26 = ((IMarkupExtension) resourceExtension12).ProvideValue((IServiceProvider) xamlServiceProvider13);
        ((NavigableElement) button).set_Style((Style) obj26);
        translateExtension6.Text = "Rating_PopupSaveButtonText";
        TranslateExtension translateExtension12 = translateExtension6;
        XamlServiceProvider xamlServiceProvider14 = new XamlServiceProvider();
        Type type27 = typeof (IProvideValueTarget);
        object[] objArray14 = new object[0 + 3];
        objArray14[0] = (object) button;
        objArray14[1] = (object) stackLayout2;
        objArray14[2] = (object) ratingPopupPage;
        SimpleValueTargetProvider valueTargetProvider14;
        object obj27 = (object) (valueTargetProvider14 = new SimpleValueTargetProvider(objArray14, (object) Button.TextProperty, (INameScope) nameScope));
        xamlServiceProvider14.Add(type27, (object) valueTargetProvider14);
        xamlServiceProvider14.Add(typeof (IReferenceProvider), obj27);
        Type type28 = typeof (IXamlTypeResolver);
        XmlNamespaceResolver namespaceResolver14 = new XmlNamespaceResolver();
        namespaceResolver14.Add("", "http://xamarin.com/schemas/2014/forms");
        namespaceResolver14.Add("x", "http://schemas.microsoft.com/winfx/2009/xaml");
        namespaceResolver14.Add("animations", "clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup");
        namespaceResolver14.Add("behaviors", "clr-namespace:Ekreta.Mobile.Core.Behaviors;assembly=Ekreta.Mobile.Core");
        namespaceResolver14.Add("d", "http://xamarin.com/schemas/2014/forms/design");
        namespaceResolver14.Add("extensions", "clr-namespace:Ekreta.Mobile.Core.Extensions;assembly=Ekreta.Mobile.Core");
        namespaceResolver14.Add("ffimageloading", "clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms");
        namespaceResolver14.Add("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
        namespaceResolver14.Add("pages", "clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup");
        namespaceResolver14.Add("viewModels", "clr-namespace:Ekreta.Mobile.Core.ViewModels;assembly=Ekreta.Mobile.Core");
        XamlTypeResolver xamlTypeResolver14 = new XamlTypeResolver((IXmlNamespaceResolver) namespaceResolver14, typeof (RatingPopupPage).GetTypeInfo().Assembly);
        xamlServiceProvider14.Add(type28, (object) xamlTypeResolver14);
        xamlServiceProvider14.Add(typeof (IXmlLineInfoProvider), (object) new XmlLineInfoProvider((IXmlLineInfo) new XmlLineInfo(107, 13)));
        object obj28 = ((IMarkupExtension) translateExtension12).ProvideValue((IServiceProvider) xamlServiceProvider14);
        button.set_Text((string) obj28);
        ((ICollection<View>) ((Layout<View>) stackLayout2).get_Children()).Add((View) button);
        ((BindableObject) ratingPopupPage).SetValue((BindableProperty) ContentPage.ContentProperty, (object) stackLayout2);
      }
    }

    private void __InitComponentRuntime()
    {
      Xamarin.Forms.Xaml.Extensions.LoadFromXaml<RatingPopupPage>((M0) this, typeof (RatingPopupPage));
      this.SaveButton = (Button) NameScopeExtensions.FindByName<Button>((Element) this, "SaveButton");
    }
  }
}
